<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2 class="mt-5 text-center mb-2">Enter Delivery Details</h2>
            <hr>
        </div>
        <div class="col-md-7">
            <form id="checkout-form" action="" class="g-3 needs-validation" novalidate>

                <div class="form-group position-relative">
                    <label for="" class="form-label">Address</label>
                    <input type="text" class="form-control" placeholder="Enter address" name="address" required>
                    <div class="valid-tooltip">
                        Looks good!
                    </div>
                    <div class="invalid-tooltip">
                        Please enter valid address!
                    </div>
                </div>

                <div class="form-group position-relative">
                    <label for="">Pincode</label>
                    <input type="number" class="form-control" placeholder="Enter pincode" name="pincode" required>
                    <div class="valid-tooltip">
                        Looks good!
                    </div>
                    <div class="invalid-tooltip">
                        Please enter your pincode!
                    </div>
                </div>

                <div class="form-group position-relative">
                    <label for="">Mobile</label>
                    <input type="tel" class="form-control" placeholder="Enter mobile" name="mobile" required>
                    <div class="valid-tooltip">
                        Looks good!
                    </div>
                    <div class="invalid-tooltip">
                        Please enter your mobile number!
                    </div>
                </div>
        </div>
        <div class="col-md-5 was-validated">
            <div class="p-3" style="border: 1px solid lightgrey;border-radius: 4px;">
                <h4>Total Amount: Rs. {{total}}</h4>
                <hr>
                <p>Payment method</p>

                <div class="form-check">
                    <input type="radio" id="validationFormCheck1" class="form-check-input" value="COD"
                        name="payment-method" required />
                    <label class="form-check-label" for="validationFormCheck2">Cash on Delivery</label>
                    <div class="invalid-feedback">Select atleast one payment method</div>
                </div>
                <div class="form-check mb-3">
                    <input type="radio" id="validationFormCheck2" class="form-check-input" value="ONLINE"
                        name="payment-method" required />
                    <label class="form-check-label" for="">Online payment</label>
                </div>
                <input type="text" name="userId" value="{{user._id}}" hidden>
                <input type="text" name="userName" value="{{user.name}}" hidden>
                <div class="row p-1 pr-3">
                    <button class="btn btn-primary ml-auto" type="submit">Checkout</button>
                </div>
            </div>
        </div>
        </form>
    </div>
</div>

<script>
    $("#checkout-form").submit((e) => {
        e.preventDefault()
        let formValid = true;
        $('[required]').each(function () {
            if ($(this).is(':invalid') || !$(this).val()) formValid = false;
        })
        if (!formValid) {
            $("input[name='address']").focus();
        }
        else {
            $.ajax({
                url: '/place-order',
                method: 'post',
                data: $('#checkout-form').serialize(),
                success: async (response) => {
                    if (response.codsuccess) {
                        await swal("Order placed successfully", "", "success")
                        location.href = '/order-placed'
                    } else {
                        razorpayPayment(response)
                    }
                }
            })
        }
    })


    function razorpayPayment(order) {
        var options = {
            "key": "rzp_test_HKArS4p4w7TuWn", // Enter the Key ID generated from the Dashboard
            "amount": order.amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
            "currency": "INR",
            "name": "Adhil Roshan",
            "description": "Test Transaction",
            "image": "https://example.com/your_logo",
            "order_id": order.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
            "handler": function (response) {

                verifyPayment(response, order)

            },
            "prefill": {
                "name": "Gaurav Kumar",
                "email": "gaurav.kumar@example.com",
                "contact": "9999999999"
            },
            "notes": {
                "address": "Razorpay Corporate Office"
            },
            "theme": {
                "color": "#3399cc"
            }
        };
        var rzp1 = new Razorpay(options);
        rzp1.open();
    }

    function verifyPayment(payment, order) {
        $.ajax({
            url: '/payment-verify',
            data: {
                payment,
                order
            },
            method: 'post',
            success: async (response) => {
                if (response.status) {
                    await swal("Order placed successfully", "", "success")
                    location.href = '/order-placed'
                } else {
                    await swal("Payment failed", "", "error")
                }
            }
        })
    }
</script>
<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict'

        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        var forms = document.querySelectorAll('.needs-validation')

        // Loop over them and prevent submission
        Array.prototype.slice.call(forms)
            .forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            })
    })()
</script>